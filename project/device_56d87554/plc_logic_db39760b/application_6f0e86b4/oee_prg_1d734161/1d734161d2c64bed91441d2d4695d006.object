{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)1d734161-d2c6-4bed-9144-1d2d4695d006","ParentGuid":"(Guid)6f0e86b4-18a4-4e3d-9377-448004deeefc","Name":"(string)OEE_PRG","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)24568a24-c491-472c-a21f-ee5d33859fab","@Value":{"@Type":"24568a24","@Value":{"MemoryReserveForOnlineChange":"(int)0","ExcludeFromBuild":"(bool)False","External":"(bool)False","EnableSystemCall":"(bool)False","CompilerDefines":"(string)","LinkAlways":"(bool)False","Undefines":{"@Type":"[string]","@Value":[]}}}}]},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"24568a24":"{24568a24-c491-472c-a21f-ee5d33859fab}","2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","bool":"System.Boolean","Guid":"System.Guid","int":"System.Int32","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)topic1 := 'factory/measurements/OEE';\n//PRG.sPublishMessage := OEE;\n\n// Tworzenie struktury JSON\n\n// Tworzenie JSON\nIF xFirst THEN\n    // Inicjalizacja obiektu JSON\n    fb_Builder(pJsonData := pJsonData);\n    fb_Builder.SetKeyWithValue(TO_WSTRING('OEE'), OEE);\n    fb_Builder.SetKeyWithValue(TO_WSTRING('Performance'), Performance);\n    fb_Builder.SetKeyWithValue(TO_WSTRING('Quality'), Quality);\n    fb_Builder.SetKeyWithValue(TO_WSTRING('Availability'), Availability);\n    fb_Builder.SetKeyWithValue(TO_WSTRING('MachineState'), Availability);\n    fb_Builder.SetKeyWithValue(TO_WSTRING('GoodParts'), GoodParts);\n    fb_Builder.SetKeyWithValue(TO_WSTRING('BadParts'), BadParts);\n    fb_Builder.SetKeyWithValue(TO_WSTRING('ProductWeight'), ProductWeight);\n\n    // Pisanie JSON do tablicy bajtów\n    fb_Writer(\n        xExecute := TRUE,\n        pwData := ADR(wsJsonData),\n        udiSize := SIZEOF(wsJsonData),\n        xAsyncMode := FALSE,\n        wsLinebreak := TO_WSTRING('$R$N'),\n        jsonData := pJsonData^\n    );\n    \n    // Sprawdzenie statusu\n    IF fb_Writer.xDone THEN\n        eError := fb_Writer.eError;\n        xFirst := FALSE;\n    ELSIF fb_Writer.xError THEN\n        eError := fb_Writer.eError;\n        xFirst := FALSE;\n    END_IF;\nEND_IF;\n\n\nR_TRIG1(CLK:= xTest, Q=> );\n// Random data generation for OEE and production metrics\nIF R_TRIG1.Q THEN\n    OEE := 50.0 + RANDOM() * 20.0; // Simulate OEE fluctuation\n    Performance := 70.0 + RANDOM() * 10.0; // Performance percentage\n    Quality := 75.0 + RANDOM() * 10.0; // Quality percentage\n    Availability := 90.0 + RANDOM() * 10.0; // Machine uptime percentage\n\n    // Simulating machine state: Running or Stopped\n    IF RANDOM() > 0.5 THEN\n        MachineState := 'Stopped';\n    ELSE\n        MachineState := 'Running';\n    END_IF;\n\n    // Production part counts\n    GoodParts := GoodParts + 1 + TO_INT(RANDOM() * 3); // Increment good parts\n    BadParts := BadParts + TO_INT(RANDOM() * 2); // Increment defective parts\n\n    // Simulate product weight variations\n    ProductWeight := 5040.0 + RANDOM() * 50.0;\n\n    // Format data in JSON format for MQTT transmission\n// MQTT_Payload := '{\"OEE\":' + REAL_TO_STRING(OEE) +\n//                 ',\"Performance\":' + REAL_TO_STRING(Performance) +\n//                 ',\"Quality\":' + REAL_TO_STRING(Quality) +\n//                 ',\"Availability\":' + REAL_TO_STRING(Availability) +\n//                 ',\"MachineState\":\"' + MachineState +\n//                 '\",\"GoodParts\":' + INT_TO_STRING(GoodParts) +\n//                 ',\"BadParts\":' + INT_TO_STRING(BadParts) +\n//                 ',\"ProductWeight\":' + REAL_TO_STRING(ProductWeight) + '}';\n\n    // Restart timer for next update\n    Timer(IN := FALSE);\n    Timer(IN := TRUE);\nEND_IF","LineInfoPersistence":"(string)1d734161-d2c6-4bed-9144-1d2d4695d006_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)PROGRAM OEE_PRG\nVAR\n    // MQTT Client configuration\n    mqttClient : MQTT.MQTTClient;\n    MQTT_Payload : STRING(255);\n\n    // Production data\n    OEE : REAL := 50.0; // Overall Equipment Effectiveness\n    Performance : REAL := 75.0; // Machine performance percentage\n    Quality : REAL := 80.0; // Quality percentage\n    Availability : REAL := 95.0; // Machine availability percentage\n    \n    MachineState : STRING(20) := 'Running'; // Machine status\n    GoodParts : INT := 0; // Number of good parts produced\n    BadParts : INT := 0; // Number of defective parts\n    ProductWeight : REAL := 5040.0; // Weight of the product\n\n    // Timer for data updates\n    Timer : TON;\n\t\n\ttopic1: string;\n\txTest: BOOL;\n\tr_trig1: R_trig;\n\t\n\t// JSON builder\n\tfactory :JSON.JSONDataFactory;\n    fb_Builder : JSON.JSONBuilder;\n    pJsonData : POINTER TO JSON.JSONData := factory.Create();\n    diRootIndex, diObjectIndex : DINT;\n    wsJsonData : WSTRING(1000);\n    xFirst : BOOL := TRUE;\n\tfb_Writer: JSON.JSONByteArrayWriter;\n\t  eError : JSON.ERROR; // Kod błędu\nEND_VAR\n","LineInfoPersistence":"(string)1d734161-d2c6-4bed-9144-1d2d4695d006_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)312","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}