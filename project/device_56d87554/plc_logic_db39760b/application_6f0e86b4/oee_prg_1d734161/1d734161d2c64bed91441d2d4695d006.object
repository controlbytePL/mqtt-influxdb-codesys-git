{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)1d734161-d2c6-4bed-9144-1d2d4695d006","ParentGuid":"(Guid)6f0e86b4-18a4-4e3d-9377-448004deeefc","Name":"(string)OEE_PRG","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)24568a24-c491-472c-a21f-ee5d33859fab","@Value":{"@Type":"24568a24","@Value":{"MemoryReserveForOnlineChange":"(int)0","ExcludeFromBuild":"(bool)True","External":"(bool)False","EnableSystemCall":"(bool)False","CompilerDefines":"(string)","LinkAlways":"(bool)False","Undefines":{"@Type":"[string]","@Value":[]}}}}]},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"24568a24":"{24568a24-c491-472c-a21f-ee5d33859fab}","2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","bool":"System.Boolean","Guid":"System.Guid","int":"System.Int32","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)//MQTT Client Configuration\nmqttClient.sHostname := '192.168.10.16'; // MQTT Broker IP\nmqttClient.uiPort := 1883; // Default MQTT port\nmqttClient.sClientID := 'CodesysClient';\n// mqttClient.wsUsername := 'mqtt_user'; // Optional - set if authentication is required\n// mqttClient.wsPassword := 'mqtt_password'; // Optional - set if authentication is required\n// mqttClient.wsWillTopic := 'factory/status'; // Will topic if the connection is lost\nmqttClient.pbWillMessage := ADR('{\"status\":\"offline\"}'); // Will message payload\nmqttClient.uiWillMessageSize := DINT_TO_UINT(Stu.StrLenA(ADR('{\"status\":\"offline\"}')));\nmqttClient.xWillRetain := FALSE;\nmqttClient.eWillQoS := MQTT.QOS.QOS1;\nmqttClient.xCleanSession := TRUE;\n// mqttClient.sTopic := 'factory/data';\nmqttClient.uiKeepAlive := 60;\nmqttClient.xEnable := TRUE;\n\n// Data update every 5 seconds\nTimer(IN := TRUE, PT := T#5S);\n\n// Random data generation for OEE and production metrics\nIF Timer.Q THEN\n    OEE := 50.0 + REAL(RANDOM() * 20.0); // Simulate OEE fluctuation\n    Performance := 70.0 + REAL(RANDOM() * 10.0); // Performance percentage\n    Quality := 75.0 + REAL(RANDOM() * 10.0); // Quality percentage\n    Availability := 90.0 + REAL(RANDOM() * 10.0); // Machine uptime percentage\n\n    // Simulating machine state: Running or Stopped\n    IF RANDOM() > 0.5 THEN\n        MachineState := 'Stopped';\n    ELSE\n        MachineState := 'Running';\n    END_IF;\n\n    // Production part counts\n    GoodParts := GoodParts + 1 + INT(RANDOM() * 3); // Increment good parts\n    BadParts := BadParts + INT(RANDOM() * 2); // Increment defective parts\n\n    // Simulate product weight variations\n    ProductWeight := 5040.0 + RANDOM() * 50.0;\n\n    // Format data in JSON format for MQTT transmission\n    MQTT_Payload := CONCAT(\n        '{\"OEE\":', REAL_TO_STRING(OEE), \n        ',\"Performance\":', REAL_TO_STRING(Performance),\n        ',\"Quality\":', REAL_TO_STRING(Quality),\n        ',\"Availability\":', REAL_TO_STRING(Availability),\n        ',\"MachineState\":\"', MachineState, '\"',\n        ',\"GoodParts\":', INT_TO_STRING(GoodParts),\n        ',\"BadParts\":', INT_TO_STRING(BadParts),\n        ',\"ProductWeight\":', REAL_TO_STRING(ProductWeight),\n        '}'\n    );\n\n    // Send JSON data to MQTT topic\n    mqttClient.PublishMessage('factory/data', MQTT_Payload, MQTT.QOS.QOS1, FALSE);\n\n    // Restart timer for next update\n    Timer(IN := FALSE);\n    Timer(IN := TRUE);\nEND_IF","LineInfoPersistence":"(string)1d734161-d2c6-4bed-9144-1d2d4695d006_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)PROGRAM OEE_PRG\nVAR\n    // MQTT Client configuration\n    mqttClient : MQTT.MQTTClient;\n    MQTT_Payload : STRING(255);\n\n    // Production data\n    OEE : REAL := 50.0; // Overall Equipment Effectiveness\n    Performance : REAL := 75.0; // Machine performance percentage\n    Quality : REAL := 80.0; // Quality percentage\n    Availability : REAL := 95.0; // Machine availability percentage\n    \n    MachineState : STRING(20) := 'Running'; // Machine status\n    GoodParts : INT := 0; // Number of good parts produced\n    BadParts : INT := 0; // Number of defective parts\n    ProductWeight : REAL := 5040.0; // Weight of the product\n\n    // Timer for data updates\n    Timer : TON;\nEND_VAR\n","LineInfoPersistence":"(string)1d734161-d2c6-4bed-9144-1d2d4695d006_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)163","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}